from http.server import BaseHTTPRequestHandler, HTTPServer
import json
import requests
import os

PORT = int(os.environ.get('PORT', 8000))
GOOGLE_MAPS_API_KEY = 'YOUR_GOOGLE_MAPS_API_KEY'

class RequestHandler(BaseHTTPRequestHandler):
    def do_POST(self):
        content_length = int(self.headers['Content-Length'])
        post_data = self.rfile.read(content_length)
        self.send_response(200)
        self.end_headers()

        payload = json.loads(post_data.decode('utf-8'))
        if 'location' in payload:
            location = f"{payload['location']['latitude']},{payload['location']['longitude']}"
            keyword = payload.get('keyword')
            if keyword:
                restaurants = search_restaurants(keyword, location)
                self.wfile.write(json.dumps(restaurants).encode('utf-8'))
        else:
            self.wfile.write(json.dumps({'error': 'Location not found'}).encode('utf-8'))

def search_restaurants(keyword, location):
    url = f'https://maps.googleapis.com/maps/api/place/nearbysearch/json?location={location}&radius=1000&type=restaurant&keyword={keyword}&key={GOOGLE_MAPS_API_KEY}'
    response = requests.get(url)
    results = response.json().get('results', [])
    restaurants = [{'name': place['name'], 'address': place['vicinity']} for place in results]
    return restaurants

def run(server_class=HTTPServer, handler_class=RequestHandler):
    server_address = ('', PORT)
    httpd = server_class(server_address, handler_class)
    print(f'Starting server on port {PORT}...')
    httpd.serve_forever()

if __name__ == '__main__':
    run()
